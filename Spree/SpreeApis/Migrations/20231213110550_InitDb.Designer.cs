// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpreeApis.Domain;

#nullable disable

namespace SpreeApis.Migrations
{
    [DbContext(typeof(SpreeDbContext))]
    [Migration("20231213110550_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SpreeApis.Domain.SpreeImage", b =>
                {
                    b.Property<long>("SpreeImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeImageId"));

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("OriginalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Position")
                        .HasColumnType("bigint");

                    b.Property<string>("TransformedUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpreeImageId");

                    b.ToTable("spree_images", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeOptionType", b =>
                {
                    b.Property<long>("SpreeOptionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeOptionTypeId"));

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Position")
                        .HasColumnType("bigint");

                    b.Property<string>("Presentation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpreeOptionTypeId");

                    b.ToTable("spree_option_types", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeOptionTypeOptionValue", b =>
                {
                    b.Property<long>("SpreeOptionTypeOptionValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeOptionTypeOptionValueId"));

                    b.Property<long>("SpreeOptionTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeOptionValueId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeOptionTypeOptionValueId");

                    b.ToTable("spree_optionTypes_optionValues", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeOptionValue", b =>
                {
                    b.Property<long>("SpreeOptionValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeOptionValueId"));

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Position")
                        .HasColumnType("bigint");

                    b.Property<string>("Presentation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpreeOptionValueId");

                    b.ToTable("spree_option_values", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProduct", b =>
                {
                    b.Property<long>("SpreeProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeProductId"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AvailableOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Backorderable")
                        .HasColumnType("bit");

                    b.Property<string>("CompareAtPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayCompareAtPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PublicMetaDataId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Purchasable")
                        .HasColumnType("bit");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("SpreeProductId");

                    b.HasIndex("PublicMetaDataId");

                    b.ToTable("spree_products", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProductImage", b =>
                {
                    b.Property<long>("SpreeProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeProductImageId"));

                    b.Property<long>("SpreeImageId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeProductId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeProductImageId");

                    b.ToTable("spree_product_images", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProductOptionType", b =>
                {
                    b.Property<long>("SpreeProductOptionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeProductOptionTypeId"));

                    b.Property<long>("SpreeOptionTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeProductId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeProductOptionTypeId");

                    b.ToTable("spree_product_otionTypes", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProductProperty", b =>
                {
                    b.Property<long>("SpreeProductPropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeProductPropertyId"));

                    b.Property<long>("SpreeProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreePropertyId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeProductPropertyId");

                    b.ToTable("spree_product_properties", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProductTaxon", b =>
                {
                    b.Property<long>("SpreeProductTaxonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeProductTaxonId"));

                    b.Property<long>("SpreeProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeTaxonId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeProductTaxonId");

                    b.ToTable("spree_product_taxons", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProductVariant", b =>
                {
                    b.Property<long>("SpreeProductVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeProductVariantId"));

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<long?>("SpreeProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SpreeVariantId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeProductVariantId");

                    b.ToTable("spree_product_variants", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProperty", b =>
                {
                    b.Property<long>("SpreePropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreePropertyId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterParam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpreePropertyId");

                    b.ToTable("spree_properties", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeStyle", b =>
                {
                    b.Property<long>("SpreeStyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeStyleId"));

                    b.Property<long>("Height")
                        .HasColumnType("bigint");

                    b.Property<long>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SpreeImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Width")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeStyleId");

                    b.HasIndex("SpreeImageId");

                    b.ToTable("spree_styles", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeTaxon", b =>
                {
                    b.Property<long>("SpreeTaxonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeTaxonId"));

                    b.Property<long?>("Depth")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsChild")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLeaf")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRoot")
                        .HasColumnType("bit");

                    b.Property<long?>("Left")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Permalink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Position")
                        .HasColumnType("bigint");

                    b.Property<string>("PrettyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Right")
                        .HasColumnType("bigint");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TaxonomyId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("SpreeTaxonId");

                    b.ToTable("spree_taxons", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeTaxonChildren", b =>
                {
                    b.Property<long>("SpreeTaxonChildrenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeTaxonChildrenId"));

                    b.Property<long>("SpreeSubTaxonId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeSupTaxonId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeTaxonChildrenId");

                    b.ToTable("spree_taxon_children", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeTaxonImage", b =>
                {
                    b.Property<long>("SpreeTaxonImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeTaxonImageId"));

                    b.Property<long>("SpreeImageId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeTaxonId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeTaxonImageId");

                    b.ToTable("spree_taxon_images", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeVariant", b =>
                {
                    b.Property<long>("SpreeVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeVariantId"));

                    b.Property<bool?>("Backorderable")
                        .HasColumnType("bit");

                    b.Property<string>("CompareAtPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Depth")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayCompareAtPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<string>("OptionsText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PublicMetaDataId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Purchasable")
                        .HasColumnType("bit");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpreeVariantId");

                    b.HasIndex("PublicMetaDataId");

                    b.ToTable("spree_variants", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeVariantImage", b =>
                {
                    b.Property<long>("SpreeVariantImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeVariantImageId"));

                    b.Property<long>("SpreeImageId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeVariantId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeVariantImageId");

                    b.ToTable("spree_variant_images", (string)null);
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeVariantOptionValue", b =>
                {
                    b.Property<long>("SpreeVariantOptionValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SpreeVariantOptionValueId"));

                    b.Property<long>("SpreeOptionValueId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpreeVariantId")
                        .HasColumnType("bigint");

                    b.HasKey("SpreeVariantOptionValueId");

                    b.ToTable("spree_variants_optionValues", (string)null);
                });

            modelBuilder.Entity("SpreeModel.PublicMetadata", b =>
                {
                    b.Property<long>("PublicMetaDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PublicMetaDataId"));

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublicMetaDataId");

                    b.ToTable("PublicMetadata");
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeProduct", b =>
                {
                    b.HasOne("SpreeModel.PublicMetadata", "PublicMetadata")
                        .WithMany()
                        .HasForeignKey("PublicMetaDataId");

                    b.Navigation("PublicMetadata");
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeStyle", b =>
                {
                    b.HasOne("SpreeApis.Domain.SpreeImage", "SpreeImage")
                        .WithMany("Styles")
                        .HasForeignKey("SpreeImageId");

                    b.Navigation("SpreeImage");
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeVariant", b =>
                {
                    b.HasOne("SpreeModel.PublicMetadata", "PublicMetadata")
                        .WithMany()
                        .HasForeignKey("PublicMetaDataId");

                    b.Navigation("PublicMetadata");
                });

            modelBuilder.Entity("SpreeApis.Domain.SpreeImage", b =>
                {
                    b.Navigation("Styles");
                });
#pragma warning restore 612, 618
        }
    }
}
